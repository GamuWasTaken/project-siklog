const a=location.pathname.split("/").slice(0,-1).join("/"),n=[a+"/_app/immutable/entry/app.BvF3kU_f.js",a+"/_app/immutable/nodes/0.6i9kaCIw.js",a+"/_app/immutable/assets/0.B6UFU3DK.css",a+"/_app/immutable/nodes/1.DC7iDlIH.js",a+"/_app/immutable/nodes/2.ByU-E3Qm.js",a+"/_app/immutable/assets/2.hUL3VApn.css",a+"/_app/immutable/chunks/C1zblzj6.js",a+"/_app/immutable/chunks/CQtWDrOW.js",a+"/_app/immutable/chunks/D1tiRcmk.js",a+"/_app/immutable/chunks/DoPjXOfq.js",a+"/_app/immutable/chunks/DsnmJJEf.js",a+"/_app/immutable/chunks/f7bms5uD.js",a+"/_app/immutable/chunks/yd3UaQxC.js",a+"/_app/immutable/entry/start.DIfqsL-6.js"],i=[a+"/.nojekyll",a+"/favicon.ico",a+"/icon.svg",a+"/manifest.json",a+"/robots.txt"],p=async s=>{await(await caches.open("v1")).addAll(s)};self.addEventListener("install",s=>{s.waitUntil(p([...n,...i]))});const m=async(s,t)=>{const e=await caches.match(s);if(e)return e;const c=await fetch(s);return t.waitUntil(o(s,c.clone())),c},o=async(s,t)=>{await(await caches.open("v1")).put(s,t)};self.addEventListener("fetch",s=>{s.respondWith(m(s.request,s))});
